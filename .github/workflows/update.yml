name: Actualiza expedientes (CSV)

on:
  # L√°nzalo de forma manual desde la pesta√±a ‚ÄúActions‚Äù
  workflow_dispatch:

  # Ejec√∫talo cada d√≠a a las 02:00 UTC ‚Üí 20:00 CDMX
  schedule:
    - cron: '0 14 * * *'

  # Vuelve a correr cuando alguien haga push (excepto si el mensaje trae [skip ci])
  push:
    branches: [ main ]

jobs:
  build:
    # Evita bucles: si el √∫ltimo commit contiene "[skip ci]", no hagas nada
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    runs-on: ubuntu-latest
    permissions:
      contents: write          # Necesario para hacer push desde el workflow

    steps:
      - name: Checkout repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0       # hace falta el historial completo para rebase

      - name: Configurar Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Instalar dependencias
        run: pip install -r requirements.txt

      - name: Ejecutar scraper / orquestador
        run: python main.py

      - name: Configurar Git
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "actions@github.com"

      - name: Comitear archivos generados
        run: |
          git add -A
          if git diff-index --quiet HEAD --; then
            echo "No hay cambios para comitear"
          else
            git commit -m "auto: datos $(date '+%Y-%m-%d %H:%M:%S') [skip ci]"
          fi

      - name: Rebase contra origin/main con autostash
        run: |
          git fetch origin main
          git rebase --autostash origin/main

      # üî• NUEVO STEP: commit vac√≠o que obliga a Streamlit Cloud a redeplegar
      - name: Forzar redeploy en Streamlit Cloud
        run: |
          git commit --allow-empty -m "ci: trigger redeploy $(date '+%Y-%m-%d %H:%M:%S') [skip ci]" || true

      - name: Push al remoto
        run: git push --force-with-lease
